using namespace metal;

struct ProjectedVertex
{
  float4 position [[position]];
  float2 uv;
};

#define random(x) fract(sin(float4(6.0, 9.0, 1.0 ,0.0) * x) * 9e2) 

fragment float4 fragmentShader(
  const ProjectedVertex in [[stage_in]],
  constant float &Time [[buffer(0)]],
  constant float &FireworksCount [[buffer(1)]],
  constant float &SparkCount [[buffer(2)]])
{
  float4 color = float4(0.0, 0.0, 0.0, 0.0);
  for (float i = -2.0; i < FireworksCount; i++)
  {
    float fireworkTime = i * 9.1 + Time;
    float d = floor(fireworkTime);
    float4 fireworkPosAndColor = random(d) + 0.3;
    fireworkTime -= d;
    for (d = 0.0; d < SparkCount; d++)
      color += fireworkPosAndColor * (1.0 - fireworkTime) / 1e3 / 
        length(in.uv - (fireworkPosAndColor - fireworkTime * (random(d * i) - 0.5)).xy);
  }
  
  return float4(color.r, color.g, color.b, 1.0);
}